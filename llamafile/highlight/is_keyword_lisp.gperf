%{
#include <string.h>
#include <libc/str/tab.h>
#define GPERF_DOWNCASE
%}
%pic
%ignore-case
%compare-strncmp
%language=ANSI-C
%readonly-tables
%define lookup-function-name is_keyword_lisp
%%
assert
block
break
case
ccase
check-type
cl-defsubst
compiler-let
cond
condition-case
ctypecase
declaim
declare
def
defadvice
defalias
defconst
defconstant
defcustom
defface
defgeneric
defgroup
define
define-advice
define-compiler-macro
define-condition
define-derived-mode
define-generic-mode
define-global-minor-mode
define-globalized-minor-mode
define-inline
define-method-combination
define-minor-mode
define-modify-macro
define-setf-expander
define-skeleton
define-symbol-macro
define-widget
defmacro
defmethod
defn
defpackage
defparameter
defsetf
defstruct
defsubst
deftheme
deftype
defun
defvar-local
defvaralias
destructuring-bind
do
do*
dolist
dotimes
ecase
ert-deftest
etypecase
eval-when
flet
flet*
fn
go
handler-bind
handler-case
if
ignore-errors
in-package
labels
lambda
let
let*
letf
letfn
locally
loop
macrolet
monitor-enter
monitor-exit
multiple-value-bind
multiple-value-prog1
proclaim
prog
prog*
prog1
prog2
progn
progv
quote
recur
restart-bind
restart-case
return
return-from
set!
symbol-macrolet
tagbody
the
throw
try
typecase
unless
unwind-protect
var
when
while
with-accessors
with-compilation-unit
with-condition-restarts
with-hash-table-iterator
with-input-from-string
with-open-file
with-open-stream
with-output-to-string
with-package-iterator
with-simple-restart
with-slots
with-standard-io-syntax
